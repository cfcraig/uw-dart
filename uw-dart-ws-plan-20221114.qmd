---
title: "Data Analysis for Reflective Teaching Workshop"
author: "Colleen Craig"
date: "`r Sys.Date()`"
format: 
  pptx:
    incremental: true
editor: visual
---

## Our guiding questions

- How does student performance / attendance in a large-lecture introductory science course correlate with class standing?
- How does student performance / attendance in a large-lecture introductory science course correlate with major?

# Getting set up

## R code introduced in this section

- `library()`
- `tidyverse`
- `ggplot`
- `dplyr`

## Load the `tidyverse` Package of Functions

- To write the commands for this workshop, we need to load a package of functions that aren't already part of the standard R language. 
  - _We could perform all the tasks in this workshop without these functions, but they will make our work much easier._
- The package of functions we need is called the `tidyverse`, and the command we use to load it is `library()`. To run the code below, put your cursor on the line and type CRTL + ENTER at the same time.

```{r echo=TRUE}
library(tidyverse)
```

## About the `tidyverse`

- The `tidyverse` is an umbrella package which itself contains several packages. 
- The `tidyverse` packages we will use in particular are:
  - `ggplot`: for data visualization
  - `dplyr`: for data wrangling


# Importing the Data

## R code introduced in this section

-   `dir()`
-   `read_csv()`, with the `name_repair` option
-   `glimpse()`
-   `<-`: the assignment operator

## ??

- We will examine course data which is readily available from CANVAS gradebooks and the teaching tab on myUW
<!-- Include links to instructions for obtaining these data files for the participants. -->
- Sample data files are contained in the `data/` sub-directory in this JUPYTER NOTEBOOK
- You can view the contents of `data/` in two different ways: 
  - clicking in to the directory in the lower right-hand panel in RStudio 
  - running the line of code below:

```{r echo=TRUE, eval=FALSE}
dir("data/") 
```

## Explore the `data/` Sub-directory

The `data/` directory contains two files in the comma-separated values (csv) format:

-   `Grades_quarter1.csv`: an anonymized and simplified subset of a real Canvas gradebook for an introductory STEM course at UW. <!--# (SAY: "IN THIS SUBSET OF DATA"â€¦DON'T SAY "CLASS") -->
-   `myUW_quarter1.csv`: an anonymized version of the MyUW classlist for the same course.

## Using `read_csv()` to read data files, part 1

- `read_csv()` creates a two-dimensional data structure called a "dataframe" from the csv file 
  - a row contains values specific to a particular student for several different data fields
  - a column contains values specific to a particular data field for several different students 
- Column header names are taken from the first row of the csv file (by default)
- Sometimes column names from a csv file don't conform to R's expected syntax. We can tell `read_csv()` to make any necessary adjustments by using the `name_repair` option.

## Using `read_csv()` to read data files, part 2

```{r echo=TRUE, eval=FALSE}
grades <- read_csv("data/Grades_quarter1.csv", name_repair = "universal")
demographics   <- read_csv("data/myUW_quarter1.csv", name_repair = "universal")
```

**In English**: "The dataframe `grades` gets [ `<-`] the result of reading the csv file "data/Grades_quarter1.csv", with the universal name repair option enabled."


